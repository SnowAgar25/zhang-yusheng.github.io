import{_ as s,c as i,a0 as e,o as t}from"./chunks/framework.DI479OgQ.js";const k=JSON.parse('{"title":"本地部署指南","description":"","frontmatter":{},"headers":[],"relativePath":"more/deploy/deploy.md","filePath":"more/deploy/deploy.md"}'),l={name:"more/deploy/deploy.md"};function h(n,a,d,o,p,r){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="本地部署指南" tabindex="-1">本地部署指南 <a class="header-anchor" href="#本地部署指南" aria-label="Permalink to &quot;本地部署指南&quot;">​</a></h1><h2 id="前置要求" tabindex="-1">前置要求 <a class="header-anchor" href="#前置要求" aria-label="Permalink to &quot;前置要求&quot;">​</a></h2><ul><li>Git</li><li>Node.js 20 或更高版本</li></ul><h2 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h2><h3 id="_1-安装-git" tabindex="-1">1. 安装 Git <a class="header-anchor" href="#_1-安装-git" aria-label="Permalink to &quot;1. 安装 Git&quot;">​</a></h3><ol><li>从 <a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git 官方网站</a> 下载并安装 Git</li><li>验证安装：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h3 id="_2-安装-node-js" tabindex="-1">2. 安装 Node.js <a class="header-anchor" href="#_2-安装-node-js" aria-label="Permalink to &quot;2. 安装 Node.js&quot;">​</a></h3><ol><li>从 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官方网站</a> 下载并安装 Node.js</li><li>安装 20.x 或更高的 LTS 版本</li><li>验证安装（确保版本号为 20.x 或更高）：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h3 id="_3-克隆项目" tabindex="-1">3. 克隆项目 <a class="header-anchor" href="#_3-克隆项目" aria-label="Permalink to &quot;3. 克隆项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/zhang-yusheng/zhang-yusheng.github.io.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zhang-yusheng.github.io</span></span></code></pre></div><h3 id="_4-安装-docsify-cli" tabindex="-1">4. 安装 docsify-cli <a class="header-anchor" href="#_4-安装-docsify-cli" aria-label="Permalink to &quot;4. 安装 docsify-cli&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docsify-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><h3 id="_5-运行项目" tabindex="-1">5. 运行项目 <a class="header-anchor" href="#_5-运行项目" aria-label="Permalink to &quot;5. 运行项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docsify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span></span></code></pre></div><p>启动服务后，请查看终端输出。docsify 会提供一个本地访问链接。使用 Ctrl+ 点击（或 Cmd+ 点击）终端中的链接来在浏览器中打开项目。</p><p>注意：</p><ul><li>实际使用的端口可能会因本地环境而异。始终使用终端中提供的链接来访问项目。</li><li>如果您想指定一个特定的端口，可以使用 <code>-p</code> 参数，例如：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docsify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> serve</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span></span></code></pre></div><p>这将使用端口 4000 来运行服务。</p><h2 id="构建电子书-可选" tabindex="-1">构建电子书（可选） <a class="header-anchor" href="#构建电子书-可选" aria-label="Permalink to &quot;构建电子书（可选）&quot;">​</a></h2><p>如果您需要构建电子书版本，请按照以下步骤操作：</p><h3 id="_1-配置-git-环境" tabindex="-1">1. 配置 Git 环境 <a class="header-anchor" href="#_1-配置-git-环境" aria-label="Permalink to &quot;1. 配置 Git 环境&quot;">​</a></h3><p>确保 Git 的 bin 目录（通常是 <code>C:\\Program Files\\Git\\bin</code>）已添加到系统的 PATH 环境变量中。这是为了能够使用 <code>sh</code> 命令。验证配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h3 id="_2-安装相关依赖" tabindex="-1">2. 安装相关依赖 <a class="header-anchor" href="#_2-安装相关依赖" aria-label="Permalink to &quot;2. 安装相关依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./scripts/install_packages.sh</span></span></code></pre></div><h3 id="_3-构建电子书" tabindex="-1">3. 构建电子书 <a class="header-anchor" href="#_3-构建电子书" aria-label="Permalink to &quot;3. 构建电子书&quot;">​</a></h3><p>使用以下命令构建不同格式的电子书：</p><table tabindex="0"><thead><tr><th style="text-align:center;">命令</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>honkit pdf</code></td><td style="text-align:center;">生成 PDF</td></tr><tr><td style="text-align:center;"><code>honkit epub</code></td><td style="text-align:center;">生成 EPUB</td></tr><tr><td style="text-align:center;"><code>honkit mobi</code></td><td style="text-align:center;">生成 MOBI</td></tr></tbody></table>`,31)]))}const g=s(l,[["render",h]]);export{k as __pageData,g as default};
